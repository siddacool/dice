{"version":3,"file":"bundle.js","sources":["../node_modules/svelte/internal/index.mjs","../node_modules/abstract-nested-router/dist/index.umd.js","../node_modules/svero/src/utils.js","../node_modules/svelte/store/index.mjs","../node_modules/svero/src/Router.svelte","../node_modules/svero/src/Route.svelte","../node_modules/svero/src/Link.svelte","../src/stores.js","../src/pages/About.svelte","../src/App.svelte","../src/main.js"],"sourcesContent":["function noop() { }\nconst identity = x => x;\nfunction assign(tar, src) {\n    // @ts-ignore\n    for (const k in src)\n        tar[k] = src[k];\n    return tar;\n}\nfunction is_promise(value) {\n    return value && typeof value === 'object' && typeof value.then === 'function';\n}\nfunction add_location(element, file, line, column, char) {\n    element.__svelte_meta = {\n        loc: { file, line, column, char }\n    };\n}\nfunction run(fn) {\n    return fn();\n}\nfunction blank_object() {\n    return Object.create(null);\n}\nfunction run_all(fns) {\n    fns.forEach(run);\n}\nfunction is_function(thing) {\n    return typeof thing === 'function';\n}\nfunction safe_not_equal(a, b) {\n    return a != a ? b == b : a !== b || ((a && typeof a === 'object') || typeof a === 'function');\n}\nfunction not_equal(a, b) {\n    return a != a ? b == b : a !== b;\n}\nfunction validate_store(store, name) {\n    if (!store || typeof store.subscribe !== 'function') {\n        throw new Error(`'${name}' is not a store with a 'subscribe' method`);\n    }\n}\nfunction subscribe(store, callback) {\n    const unsub = store.subscribe(callback);\n    return unsub.unsubscribe ? () => unsub.unsubscribe() : unsub;\n}\nfunction get_store_value(store) {\n    let value;\n    subscribe(store, _ => value = _)();\n    return value;\n}\nfunction component_subscribe(component, store, callback) {\n    component.$$.on_destroy.push(subscribe(store, callback));\n}\nfunction create_slot(definition, ctx, fn) {\n    if (definition) {\n        const slot_ctx = get_slot_context(definition, ctx, fn);\n        return definition[0](slot_ctx);\n    }\n}\nfunction get_slot_context(definition, ctx, fn) {\n    return definition[1]\n        ? assign({}, assign(ctx.$$scope.ctx, definition[1](fn ? fn(ctx) : {})))\n        : ctx.$$scope.ctx;\n}\nfunction get_slot_changes(definition, ctx, changed, fn) {\n    return definition[1]\n        ? assign({}, assign(ctx.$$scope.changed || {}, definition[1](fn ? fn(changed) : {})))\n        : ctx.$$scope.changed || {};\n}\nfunction exclude_internal_props(props) {\n    const result = {};\n    for (const k in props)\n        if (k[0] !== '$')\n            result[k] = props[k];\n    return result;\n}\nfunction once(fn) {\n    let ran = false;\n    return function (...args) {\n        if (ran)\n            return;\n        ran = true;\n        fn.call(this, ...args);\n    };\n}\nfunction null_to_empty(value) {\n    return value == null ? '' : value;\n}\n\nconst is_client = typeof window !== 'undefined';\nlet now = is_client\n    ? () => window.performance.now()\n    : () => Date.now();\nlet raf = is_client ? cb => requestAnimationFrame(cb) : noop;\n// used internally for testing\nfunction set_now(fn) {\n    now = fn;\n}\nfunction set_raf(fn) {\n    raf = fn;\n}\n\nconst tasks = new Set();\nlet running = false;\nfunction run_tasks() {\n    tasks.forEach(task => {\n        if (!task[0](now())) {\n            tasks.delete(task);\n            task[1]();\n        }\n    });\n    running = tasks.size > 0;\n    if (running)\n        raf(run_tasks);\n}\nfunction clear_loops() {\n    // for testing...\n    tasks.forEach(task => tasks.delete(task));\n    running = false;\n}\nfunction loop(fn) {\n    let task;\n    if (!running) {\n        running = true;\n        raf(run_tasks);\n    }\n    return {\n        promise: new Promise(fulfil => {\n            tasks.add(task = [fn, fulfil]);\n        }),\n        abort() {\n            tasks.delete(task);\n        }\n    };\n}\n\nfunction append(target, node) {\n    target.appendChild(node);\n}\nfunction insert(target, node, anchor) {\n    target.insertBefore(node, anchor || null);\n}\nfunction detach(node) {\n    node.parentNode.removeChild(node);\n}\nfunction destroy_each(iterations, detaching) {\n    for (let i = 0; i < iterations.length; i += 1) {\n        if (iterations[i])\n            iterations[i].d(detaching);\n    }\n}\nfunction element(name) {\n    return document.createElement(name);\n}\nfunction element_is(name, is) {\n    return document.createElement(name, { is });\n}\nfunction object_without_properties(obj, exclude) {\n    // eslint-disable-next-line @typescript-eslint/no-object-literal-type-assertion\n    const target = {};\n    for (const k in obj) {\n        if (Object.prototype.hasOwnProperty.call(obj, k)\n            // @ts-ignore\n            && exclude.indexOf(k) === -1) {\n            // @ts-ignore\n            target[k] = obj[k];\n        }\n    }\n    return target;\n}\nfunction svg_element(name) {\n    return document.createElementNS('http://www.w3.org/2000/svg', name);\n}\nfunction text(data) {\n    return document.createTextNode(data);\n}\nfunction space() {\n    return text(' ');\n}\nfunction empty() {\n    return text('');\n}\nfunction listen(node, event, handler, options) {\n    node.addEventListener(event, handler, options);\n    return () => node.removeEventListener(event, handler, options);\n}\nfunction prevent_default(fn) {\n    return function (event) {\n        event.preventDefault();\n        // @ts-ignore\n        return fn.call(this, event);\n    };\n}\nfunction stop_propagation(fn) {\n    return function (event) {\n        event.stopPropagation();\n        // @ts-ignore\n        return fn.call(this, event);\n    };\n}\nfunction self(fn) {\n    return function (event) {\n        // @ts-ignore\n        if (event.target === this)\n            fn.call(this, event);\n    };\n}\nfunction attr(node, attribute, value) {\n    if (value == null)\n        node.removeAttribute(attribute);\n    else\n        node.setAttribute(attribute, value);\n}\nfunction set_attributes(node, attributes) {\n    for (const key in attributes) {\n        if (key === 'style') {\n            node.style.cssText = attributes[key];\n        }\n        else if (key in node) {\n            node[key] = attributes[key];\n        }\n        else {\n            attr(node, key, attributes[key]);\n        }\n    }\n}\nfunction set_custom_element_data(node, prop, value) {\n    if (prop in node) {\n        node[prop] = value;\n    }\n    else {\n        attr(node, prop, value);\n    }\n}\nfunction xlink_attr(node, attribute, value) {\n    node.setAttributeNS('http://www.w3.org/1999/xlink', attribute, value);\n}\nfunction get_binding_group_value(group) {\n    const value = [];\n    for (let i = 0; i < group.length; i += 1) {\n        if (group[i].checked)\n            value.push(group[i].__value);\n    }\n    return value;\n}\nfunction to_number(value) {\n    return value === '' ? undefined : +value;\n}\nfunction time_ranges_to_array(ranges) {\n    const array = [];\n    for (let i = 0; i < ranges.length; i += 1) {\n        array.push({ start: ranges.start(i), end: ranges.end(i) });\n    }\n    return array;\n}\nfunction children(element) {\n    return Array.from(element.childNodes);\n}\nfunction claim_element(nodes, name, attributes, svg) {\n    for (let i = 0; i < nodes.length; i += 1) {\n        const node = nodes[i];\n        if (node.nodeName === name) {\n            for (let j = 0; j < node.attributes.length; j += 1) {\n                const attribute = node.attributes[j];\n                if (!attributes[attribute.name])\n                    node.removeAttribute(attribute.name);\n            }\n            return nodes.splice(i, 1)[0]; // TODO strip unwanted attributes\n        }\n    }\n    return svg ? svg_element(name) : element(name);\n}\nfunction claim_text(nodes, data) {\n    for (let i = 0; i < nodes.length; i += 1) {\n        const node = nodes[i];\n        if (node.nodeType === 3) {\n            node.data = data;\n            return nodes.splice(i, 1)[0];\n        }\n    }\n    return text(data);\n}\nfunction set_data(text, data) {\n    data = '' + data;\n    if (text.data !== data)\n        text.data = data;\n}\nfunction set_input_value(input, value) {\n    if (value != null || input.value) {\n        input.value = value;\n    }\n}\nfunction set_input_type(input, type) {\n    try {\n        input.type = type;\n    }\n    catch (e) {\n        // do nothing\n    }\n}\nfunction set_style(node, key, value) {\n    node.style.setProperty(key, value);\n}\nfunction select_option(select, value) {\n    for (let i = 0; i < select.options.length; i += 1) {\n        const option = select.options[i];\n        if (option.__value === value) {\n            option.selected = true;\n            return;\n        }\n    }\n}\nfunction select_options(select, value) {\n    for (let i = 0; i < select.options.length; i += 1) {\n        const option = select.options[i];\n        option.selected = ~value.indexOf(option.__value);\n    }\n}\nfunction select_value(select) {\n    const selected_option = select.querySelector(':checked') || select.options[0];\n    return selected_option && selected_option.__value;\n}\nfunction select_multiple_value(select) {\n    return [].map.call(select.querySelectorAll(':checked'), option => option.__value);\n}\nfunction add_resize_listener(element, fn) {\n    if (getComputedStyle(element).position === 'static') {\n        element.style.position = 'relative';\n    }\n    const object = document.createElement('object');\n    object.setAttribute('style', 'display: block; position: absolute; top: 0; left: 0; height: 100%; width: 100%; overflow: hidden; pointer-events: none; z-index: -1;');\n    object.type = 'text/html';\n    object.tabIndex = -1;\n    let win;\n    object.onload = () => {\n        win = object.contentDocument.defaultView;\n        win.addEventListener('resize', fn);\n    };\n    if (/Trident/.test(navigator.userAgent)) {\n        element.appendChild(object);\n        object.data = 'about:blank';\n    }\n    else {\n        object.data = 'about:blank';\n        element.appendChild(object);\n    }\n    return {\n        cancel: () => {\n            win && win.removeEventListener && win.removeEventListener('resize', fn);\n            element.removeChild(object);\n        }\n    };\n}\nfunction toggle_class(element, name, toggle) {\n    element.classList[toggle ? 'add' : 'remove'](name);\n}\nfunction custom_event(type, detail) {\n    const e = document.createEvent('CustomEvent');\n    e.initCustomEvent(type, false, false, detail);\n    return e;\n}\nclass HtmlTag {\n    constructor(html, anchor = null) {\n        this.e = element('div');\n        this.a = anchor;\n        this.u(html);\n    }\n    m(target, anchor = null) {\n        for (let i = 0; i < this.n.length; i += 1) {\n            insert(target, this.n[i], anchor);\n        }\n        this.t = target;\n    }\n    u(html) {\n        this.e.innerHTML = html;\n        this.n = Array.from(this.e.childNodes);\n    }\n    p(html) {\n        this.d();\n        this.u(html);\n        this.m(this.t, this.a);\n    }\n    d() {\n        this.n.forEach(detach);\n    }\n}\n\nlet stylesheet;\nlet active = 0;\nlet current_rules = {};\n// https://github.com/darkskyapp/string-hash/blob/master/index.js\nfunction hash(str) {\n    let hash = 5381;\n    let i = str.length;\n    while (i--)\n        hash = ((hash << 5) - hash) ^ str.charCodeAt(i);\n    return hash >>> 0;\n}\nfunction create_rule(node, a, b, duration, delay, ease, fn, uid = 0) {\n    const step = 16.666 / duration;\n    let keyframes = '{\\n';\n    for (let p = 0; p <= 1; p += step) {\n        const t = a + (b - a) * ease(p);\n        keyframes += p * 100 + `%{${fn(t, 1 - t)}}\\n`;\n    }\n    const rule = keyframes + `100% {${fn(b, 1 - b)}}\\n}`;\n    const name = `__svelte_${hash(rule)}_${uid}`;\n    if (!current_rules[name]) {\n        if (!stylesheet) {\n            const style = element('style');\n            document.head.appendChild(style);\n            stylesheet = style.sheet;\n        }\n        current_rules[name] = true;\n        stylesheet.insertRule(`@keyframes ${name} ${rule}`, stylesheet.cssRules.length);\n    }\n    const animation = node.style.animation || '';\n    node.style.animation = `${animation ? `${animation}, ` : ``}${name} ${duration}ms linear ${delay}ms 1 both`;\n    active += 1;\n    return name;\n}\nfunction delete_rule(node, name) {\n    node.style.animation = (node.style.animation || '')\n        .split(', ')\n        .filter(name\n        ? anim => anim.indexOf(name) < 0 // remove specific animation\n        : anim => anim.indexOf('__svelte') === -1 // remove all Svelte animations\n    )\n        .join(', ');\n    if (name && !--active)\n        clear_rules();\n}\nfunction clear_rules() {\n    raf(() => {\n        if (active)\n            return;\n        let i = stylesheet.cssRules.length;\n        while (i--)\n            stylesheet.deleteRule(i);\n        current_rules = {};\n    });\n}\n\nfunction create_animation(node, from, fn, params) {\n    if (!from)\n        return noop;\n    const to = node.getBoundingClientRect();\n    if (from.left === to.left && from.right === to.right && from.top === to.top && from.bottom === to.bottom)\n        return noop;\n    const { delay = 0, duration = 300, easing = identity, \n    // @ts-ignore todo: should this be separated from destructuring? Or start/end added to public api and documentation?\n    start: start_time = now() + delay, \n    // @ts-ignore todo:\n    end = start_time + duration, tick = noop, css } = fn(node, { from, to }, params);\n    let running = true;\n    let started = false;\n    let name;\n    function start() {\n        if (css) {\n            name = create_rule(node, 0, 1, duration, delay, easing, css);\n        }\n        if (!delay) {\n            started = true;\n        }\n    }\n    function stop() {\n        if (css)\n            delete_rule(node, name);\n        running = false;\n    }\n    loop(now => {\n        if (!started && now >= start_time) {\n            started = true;\n        }\n        if (started && now >= end) {\n            tick(1, 0);\n            stop();\n        }\n        if (!running) {\n            return false;\n        }\n        if (started) {\n            const p = now - start_time;\n            const t = 0 + 1 * easing(p / duration);\n            tick(t, 1 - t);\n        }\n        return true;\n    });\n    start();\n    tick(0, 1);\n    return stop;\n}\nfunction fix_position(node) {\n    const style = getComputedStyle(node);\n    if (style.position !== 'absolute' && style.position !== 'fixed') {\n        const { width, height } = style;\n        const a = node.getBoundingClientRect();\n        node.style.position = 'absolute';\n        node.style.width = width;\n        node.style.height = height;\n        add_transform(node, a);\n    }\n}\nfunction add_transform(node, a) {\n    const b = node.getBoundingClientRect();\n    if (a.left !== b.left || a.top !== b.top) {\n        const style = getComputedStyle(node);\n        const transform = style.transform === 'none' ? '' : style.transform;\n        node.style.transform = `${transform} translate(${a.left - b.left}px, ${a.top - b.top}px)`;\n    }\n}\n\nlet current_component;\nfunction set_current_component(component) {\n    current_component = component;\n}\nfunction get_current_component() {\n    if (!current_component)\n        throw new Error(`Function called outside component initialization`);\n    return current_component;\n}\nfunction beforeUpdate(fn) {\n    get_current_component().$$.before_update.push(fn);\n}\nfunction onMount(fn) {\n    get_current_component().$$.on_mount.push(fn);\n}\nfunction afterUpdate(fn) {\n    get_current_component().$$.after_update.push(fn);\n}\nfunction onDestroy(fn) {\n    get_current_component().$$.on_destroy.push(fn);\n}\nfunction createEventDispatcher() {\n    const component = current_component;\n    return (type, detail) => {\n        const callbacks = component.$$.callbacks[type];\n        if (callbacks) {\n            // TODO are there situations where events could be dispatched\n            // in a server (non-DOM) environment?\n            const event = custom_event(type, detail);\n            callbacks.slice().forEach(fn => {\n                fn.call(component, event);\n            });\n        }\n    };\n}\nfunction setContext(key, context) {\n    get_current_component().$$.context.set(key, context);\n}\nfunction getContext(key) {\n    return get_current_component().$$.context.get(key);\n}\n// TODO figure out if we still want to support\n// shorthand events, or if we want to implement\n// a real bubbling mechanism\nfunction bubble(component, event) {\n    const callbacks = component.$$.callbacks[event.type];\n    if (callbacks) {\n        callbacks.slice().forEach(fn => fn(event));\n    }\n}\n\nconst dirty_components = [];\nconst intros = { enabled: false };\nconst binding_callbacks = [];\nconst render_callbacks = [];\nconst flush_callbacks = [];\nconst resolved_promise = Promise.resolve();\nlet update_scheduled = false;\nfunction schedule_update() {\n    if (!update_scheduled) {\n        update_scheduled = true;\n        resolved_promise.then(flush);\n    }\n}\nfunction tick() {\n    schedule_update();\n    return resolved_promise;\n}\nfunction add_render_callback(fn) {\n    render_callbacks.push(fn);\n}\nfunction add_flush_callback(fn) {\n    flush_callbacks.push(fn);\n}\nfunction flush() {\n    const seen_callbacks = new Set();\n    do {\n        // first, call beforeUpdate functions\n        // and update components\n        while (dirty_components.length) {\n            const component = dirty_components.shift();\n            set_current_component(component);\n            update(component.$$);\n        }\n        while (binding_callbacks.length)\n            binding_callbacks.pop()();\n        // then, once components are updated, call\n        // afterUpdate functions. This may cause\n        // subsequent updates...\n        for (let i = 0; i < render_callbacks.length; i += 1) {\n            const callback = render_callbacks[i];\n            if (!seen_callbacks.has(callback)) {\n                callback();\n                // ...so guard against infinite loops\n                seen_callbacks.add(callback);\n            }\n        }\n        render_callbacks.length = 0;\n    } while (dirty_components.length);\n    while (flush_callbacks.length) {\n        flush_callbacks.pop()();\n    }\n    update_scheduled = false;\n}\nfunction update($$) {\n    if ($$.fragment) {\n        $$.update($$.dirty);\n        run_all($$.before_update);\n        $$.fragment.p($$.dirty, $$.ctx);\n        $$.dirty = null;\n        $$.after_update.forEach(add_render_callback);\n    }\n}\n\nlet promise;\nfunction wait() {\n    if (!promise) {\n        promise = Promise.resolve();\n        promise.then(() => {\n            promise = null;\n        });\n    }\n    return promise;\n}\nfunction dispatch(node, direction, kind) {\n    node.dispatchEvent(custom_event(`${direction ? 'intro' : 'outro'}${kind}`));\n}\nconst outroing = new Set();\nlet outros;\nfunction group_outros() {\n    outros = {\n        r: 0,\n        c: [],\n        p: outros // parent group\n    };\n}\nfunction check_outros() {\n    if (!outros.r) {\n        run_all(outros.c);\n    }\n    outros = outros.p;\n}\nfunction transition_in(block, local) {\n    if (block && block.i) {\n        outroing.delete(block);\n        block.i(local);\n    }\n}\nfunction transition_out(block, local, detach, callback) {\n    if (block && block.o) {\n        if (outroing.has(block))\n            return;\n        outroing.add(block);\n        outros.c.push(() => {\n            outroing.delete(block);\n            if (callback) {\n                if (detach)\n                    block.d(1);\n                callback();\n            }\n        });\n        block.o(local);\n    }\n}\nconst null_transition = { duration: 0 };\nfunction create_in_transition(node, fn, params) {\n    let config = fn(node, params);\n    let running = false;\n    let animation_name;\n    let task;\n    let uid = 0;\n    function cleanup() {\n        if (animation_name)\n            delete_rule(node, animation_name);\n    }\n    function go() {\n        const { delay = 0, duration = 300, easing = identity, tick = noop, css } = config || null_transition;\n        if (css)\n            animation_name = create_rule(node, 0, 1, duration, delay, easing, css, uid++);\n        tick(0, 1);\n        const start_time = now() + delay;\n        const end_time = start_time + duration;\n        if (task)\n            task.abort();\n        running = true;\n        add_render_callback(() => dispatch(node, true, 'start'));\n        task = loop(now => {\n            if (running) {\n                if (now >= end_time) {\n                    tick(1, 0);\n                    dispatch(node, true, 'end');\n                    cleanup();\n                    return running = false;\n                }\n                if (now >= start_time) {\n                    const t = easing((now - start_time) / duration);\n                    tick(t, 1 - t);\n                }\n            }\n            return running;\n        });\n    }\n    let started = false;\n    return {\n        start() {\n            if (started)\n                return;\n            delete_rule(node);\n            if (is_function(config)) {\n                config = config();\n                wait().then(go);\n            }\n            else {\n                go();\n            }\n        },\n        invalidate() {\n            started = false;\n        },\n        end() {\n            if (running) {\n                cleanup();\n                running = false;\n            }\n        }\n    };\n}\nfunction create_out_transition(node, fn, params) {\n    let config = fn(node, params);\n    let running = true;\n    let animation_name;\n    const group = outros;\n    group.r += 1;\n    function go() {\n        const { delay = 0, duration = 300, easing = identity, tick = noop, css } = config || null_transition;\n        if (css)\n            animation_name = create_rule(node, 1, 0, duration, delay, easing, css);\n        const start_time = now() + delay;\n        const end_time = start_time + duration;\n        add_render_callback(() => dispatch(node, false, 'start'));\n        loop(now => {\n            if (running) {\n                if (now >= end_time) {\n                    tick(0, 1);\n                    dispatch(node, false, 'end');\n                    if (!--group.r) {\n                        // this will result in `end()` being called,\n                        // so we don't need to clean up here\n                        run_all(group.c);\n                    }\n                    return false;\n                }\n                if (now >= start_time) {\n                    const t = easing((now - start_time) / duration);\n                    tick(1 - t, t);\n                }\n            }\n            return running;\n        });\n    }\n    if (is_function(config)) {\n        wait().then(() => {\n            // @ts-ignore\n            config = config();\n            go();\n        });\n    }\n    else {\n        go();\n    }\n    return {\n        end(reset) {\n            if (reset && config.tick) {\n                config.tick(1, 0);\n            }\n            if (running) {\n                if (animation_name)\n                    delete_rule(node, animation_name);\n                running = false;\n            }\n        }\n    };\n}\nfunction create_bidirectional_transition(node, fn, params, intro) {\n    let config = fn(node, params);\n    let t = intro ? 0 : 1;\n    let running_program = null;\n    let pending_program = null;\n    let animation_name = null;\n    function clear_animation() {\n        if (animation_name)\n            delete_rule(node, animation_name);\n    }\n    function init(program, duration) {\n        const d = program.b - t;\n        duration *= Math.abs(d);\n        return {\n            a: t,\n            b: program.b,\n            d,\n            duration,\n            start: program.start,\n            end: program.start + duration,\n            group: program.group\n        };\n    }\n    function go(b) {\n        const { delay = 0, duration = 300, easing = identity, tick = noop, css } = config || null_transition;\n        const program = {\n            start: now() + delay,\n            b\n        };\n        if (!b) {\n            // @ts-ignore todo: improve typings\n            program.group = outros;\n            outros.r += 1;\n        }\n        if (running_program) {\n            pending_program = program;\n        }\n        else {\n            // if this is an intro, and there's a delay, we need to do\n            // an initial tick and/or apply CSS animation immediately\n            if (css) {\n                clear_animation();\n                animation_name = create_rule(node, t, b, duration, delay, easing, css);\n            }\n            if (b)\n                tick(0, 1);\n            running_program = init(program, duration);\n            add_render_callback(() => dispatch(node, b, 'start'));\n            loop(now => {\n                if (pending_program && now > pending_program.start) {\n                    running_program = init(pending_program, duration);\n                    pending_program = null;\n                    dispatch(node, running_program.b, 'start');\n                    if (css) {\n                        clear_animation();\n                        animation_name = create_rule(node, t, running_program.b, running_program.duration, 0, easing, config.css);\n                    }\n                }\n                if (running_program) {\n                    if (now >= running_program.end) {\n                        tick(t = running_program.b, 1 - t);\n                        dispatch(node, running_program.b, 'end');\n                        if (!pending_program) {\n                            // we're done\n                            if (running_program.b) {\n                                // intro — we can tidy up immediately\n                                clear_animation();\n                            }\n                            else {\n                                // outro — needs to be coordinated\n                                if (!--running_program.group.r)\n                                    run_all(running_program.group.c);\n                            }\n                        }\n                        running_program = null;\n                    }\n                    else if (now >= running_program.start) {\n                        const p = now - running_program.start;\n                        t = running_program.a + running_program.d * easing(p / running_program.duration);\n                        tick(t, 1 - t);\n                    }\n                }\n                return !!(running_program || pending_program);\n            });\n        }\n    }\n    return {\n        run(b) {\n            if (is_function(config)) {\n                wait().then(() => {\n                    // @ts-ignore\n                    config = config();\n                    go(b);\n                });\n            }\n            else {\n                go(b);\n            }\n        },\n        end() {\n            clear_animation();\n            running_program = pending_program = null;\n        }\n    };\n}\n\nfunction handle_promise(promise, info) {\n    const token = info.token = {};\n    function update(type, index, key, value) {\n        if (info.token !== token)\n            return;\n        info.resolved = key && { [key]: value };\n        const child_ctx = assign(assign({}, info.ctx), info.resolved);\n        const block = type && (info.current = type)(child_ctx);\n        if (info.block) {\n            if (info.blocks) {\n                info.blocks.forEach((block, i) => {\n                    if (i !== index && block) {\n                        group_outros();\n                        transition_out(block, 1, 1, () => {\n                            info.blocks[i] = null;\n                        });\n                        check_outros();\n                    }\n                });\n            }\n            else {\n                info.block.d(1);\n            }\n            block.c();\n            transition_in(block, 1);\n            block.m(info.mount(), info.anchor);\n            flush();\n        }\n        info.block = block;\n        if (info.blocks)\n            info.blocks[index] = block;\n    }\n    if (is_promise(promise)) {\n        promise.then(value => {\n            update(info.then, 1, info.value, value);\n        }, error => {\n            update(info.catch, 2, info.error, error);\n        });\n        // if we previously had a then/catch block, destroy it\n        if (info.current !== info.pending) {\n            update(info.pending, 0);\n            return true;\n        }\n    }\n    else {\n        if (info.current !== info.then) {\n            update(info.then, 1, info.value, promise);\n            return true;\n        }\n        info.resolved = { [info.value]: promise };\n    }\n}\n\nconst globals = (typeof window !== 'undefined' ? window : global);\n\nfunction destroy_block(block, lookup) {\n    block.d(1);\n    lookup.delete(block.key);\n}\nfunction outro_and_destroy_block(block, lookup) {\n    transition_out(block, 1, 1, () => {\n        lookup.delete(block.key);\n    });\n}\nfunction fix_and_destroy_block(block, lookup) {\n    block.f();\n    destroy_block(block, lookup);\n}\nfunction fix_and_outro_and_destroy_block(block, lookup) {\n    block.f();\n    outro_and_destroy_block(block, lookup);\n}\nfunction update_keyed_each(old_blocks, changed, get_key, dynamic, ctx, list, lookup, node, destroy, create_each_block, next, get_context) {\n    let o = old_blocks.length;\n    let n = list.length;\n    let i = o;\n    const old_indexes = {};\n    while (i--)\n        old_indexes[old_blocks[i].key] = i;\n    const new_blocks = [];\n    const new_lookup = new Map();\n    const deltas = new Map();\n    i = n;\n    while (i--) {\n        const child_ctx = get_context(ctx, list, i);\n        const key = get_key(child_ctx);\n        let block = lookup.get(key);\n        if (!block) {\n            block = create_each_block(key, child_ctx);\n            block.c();\n        }\n        else if (dynamic) {\n            block.p(changed, child_ctx);\n        }\n        new_lookup.set(key, new_blocks[i] = block);\n        if (key in old_indexes)\n            deltas.set(key, Math.abs(i - old_indexes[key]));\n    }\n    const will_move = new Set();\n    const did_move = new Set();\n    function insert(block) {\n        transition_in(block, 1);\n        block.m(node, next);\n        lookup.set(block.key, block);\n        next = block.first;\n        n--;\n    }\n    while (o && n) {\n        const new_block = new_blocks[n - 1];\n        const old_block = old_blocks[o - 1];\n        const new_key = new_block.key;\n        const old_key = old_block.key;\n        if (new_block === old_block) {\n            // do nothing\n            next = new_block.first;\n            o--;\n            n--;\n        }\n        else if (!new_lookup.has(old_key)) {\n            // remove old block\n            destroy(old_block, lookup);\n            o--;\n        }\n        else if (!lookup.has(new_key) || will_move.has(new_key)) {\n            insert(new_block);\n        }\n        else if (did_move.has(old_key)) {\n            o--;\n        }\n        else if (deltas.get(new_key) > deltas.get(old_key)) {\n            did_move.add(new_key);\n            insert(new_block);\n        }\n        else {\n            will_move.add(old_key);\n            o--;\n        }\n    }\n    while (o--) {\n        const old_block = old_blocks[o];\n        if (!new_lookup.has(old_block.key))\n            destroy(old_block, lookup);\n    }\n    while (n)\n        insert(new_blocks[n - 1]);\n    return new_blocks;\n}\nfunction measure(blocks) {\n    const rects = {};\n    let i = blocks.length;\n    while (i--)\n        rects[blocks[i].key] = blocks[i].node.getBoundingClientRect();\n    return rects;\n}\n\nfunction get_spread_update(levels, updates) {\n    const update = {};\n    const to_null_out = {};\n    const accounted_for = { $$scope: 1 };\n    let i = levels.length;\n    while (i--) {\n        const o = levels[i];\n        const n = updates[i];\n        if (n) {\n            for (const key in o) {\n                if (!(key in n))\n                    to_null_out[key] = 1;\n            }\n            for (const key in n) {\n                if (!accounted_for[key]) {\n                    update[key] = n[key];\n                    accounted_for[key] = 1;\n                }\n            }\n            levels[i] = n;\n        }\n        else {\n            for (const key in o) {\n                accounted_for[key] = 1;\n            }\n        }\n    }\n    for (const key in to_null_out) {\n        if (!(key in update))\n            update[key] = undefined;\n    }\n    return update;\n}\n\nconst invalid_attribute_name_character = /[\\s'\">/=\\u{FDD0}-\\u{FDEF}\\u{FFFE}\\u{FFFF}\\u{1FFFE}\\u{1FFFF}\\u{2FFFE}\\u{2FFFF}\\u{3FFFE}\\u{3FFFF}\\u{4FFFE}\\u{4FFFF}\\u{5FFFE}\\u{5FFFF}\\u{6FFFE}\\u{6FFFF}\\u{7FFFE}\\u{7FFFF}\\u{8FFFE}\\u{8FFFF}\\u{9FFFE}\\u{9FFFF}\\u{AFFFE}\\u{AFFFF}\\u{BFFFE}\\u{BFFFF}\\u{CFFFE}\\u{CFFFF}\\u{DFFFE}\\u{DFFFF}\\u{EFFFE}\\u{EFFFF}\\u{FFFFE}\\u{FFFFF}\\u{10FFFE}\\u{10FFFF}]/u;\n// https://html.spec.whatwg.org/multipage/syntax.html#attributes-2\n// https://infra.spec.whatwg.org/#noncharacter\nfunction spread(args) {\n    const attributes = Object.assign({}, ...args);\n    let str = '';\n    Object.keys(attributes).forEach(name => {\n        if (invalid_attribute_name_character.test(name))\n            return;\n        const value = attributes[name];\n        if (value === undefined)\n            return;\n        if (value === true)\n            str += \" \" + name;\n        const escaped = String(value)\n            .replace(/\"/g, '&#34;')\n            .replace(/'/g, '&#39;');\n        str += \" \" + name + \"=\" + JSON.stringify(escaped);\n    });\n    return str;\n}\nconst escaped = {\n    '\"': '&quot;',\n    \"'\": '&#39;',\n    '&': '&amp;',\n    '<': '&lt;',\n    '>': '&gt;'\n};\nfunction escape(html) {\n    return String(html).replace(/[\"'&<>]/g, match => escaped[match]);\n}\nfunction each(items, fn) {\n    let str = '';\n    for (let i = 0; i < items.length; i += 1) {\n        str += fn(items[i], i);\n    }\n    return str;\n}\nconst missing_component = {\n    $$render: () => ''\n};\nfunction validate_component(component, name) {\n    if (!component || !component.$$render) {\n        if (name === 'svelte:component')\n            name += ' this={...}';\n        throw new Error(`<${name}> is not a valid SSR component. You may need to review your build config to ensure that dependencies are compiled, rather than imported as pre-compiled modules`);\n    }\n    return component;\n}\nfunction debug(file, line, column, values) {\n    console.log(`{@debug} ${file ? file + ' ' : ''}(${line}:${column})`); // eslint-disable-line no-console\n    console.log(values); // eslint-disable-line no-console\n    return '';\n}\nlet on_destroy;\nfunction create_ssr_component(fn) {\n    function $$render(result, props, bindings, slots) {\n        const parent_component = current_component;\n        const $$ = {\n            on_destroy,\n            context: new Map(parent_component ? parent_component.$$.context : []),\n            // these will be immediately discarded\n            on_mount: [],\n            before_update: [],\n            after_update: [],\n            callbacks: blank_object()\n        };\n        set_current_component({ $$ });\n        const html = fn(result, props, bindings, slots);\n        set_current_component(parent_component);\n        return html;\n    }\n    return {\n        render: (props = {}, options = {}) => {\n            on_destroy = [];\n            const result = { head: '', css: new Set() };\n            const html = $$render(result, props, {}, options);\n            run_all(on_destroy);\n            return {\n                html,\n                css: {\n                    code: Array.from(result.css).map(css => css.code).join('\\n'),\n                    map: null // TODO\n                },\n                head: result.head\n            };\n        },\n        $$render\n    };\n}\nfunction add_attribute(name, value, boolean) {\n    if (value == null || (boolean && !value))\n        return '';\n    return ` ${name}${value === true ? '' : `=${typeof value === 'string' ? JSON.stringify(escape(value)) : `\"${value}\"`}`}`;\n}\nfunction add_classes(classes) {\n    return classes ? ` class=\"${classes}\"` : ``;\n}\n\nfunction bind(component, name, callback) {\n    if (component.$$.props.indexOf(name) === -1)\n        return;\n    component.$$.bound[name] = callback;\n    callback(component.$$.ctx[name]);\n}\nfunction mount_component(component, target, anchor) {\n    const { fragment, on_mount, on_destroy, after_update } = component.$$;\n    fragment.m(target, anchor);\n    // onMount happens before the initial afterUpdate\n    add_render_callback(() => {\n        const new_on_destroy = on_mount.map(run).filter(is_function);\n        if (on_destroy) {\n            on_destroy.push(...new_on_destroy);\n        }\n        else {\n            // Edge case - component was destroyed immediately,\n            // most likely as a result of a binding initialising\n            run_all(new_on_destroy);\n        }\n        component.$$.on_mount = [];\n    });\n    after_update.forEach(add_render_callback);\n}\nfunction destroy_component(component, detaching) {\n    if (component.$$.fragment) {\n        run_all(component.$$.on_destroy);\n        component.$$.fragment.d(detaching);\n        // TODO null out other refs, including component.$$ (but need to\n        // preserve final state?)\n        component.$$.on_destroy = component.$$.fragment = null;\n        component.$$.ctx = {};\n    }\n}\nfunction make_dirty(component, key) {\n    if (!component.$$.dirty) {\n        dirty_components.push(component);\n        schedule_update();\n        component.$$.dirty = blank_object();\n    }\n    component.$$.dirty[key] = true;\n}\nfunction init(component, options, instance, create_fragment, not_equal, prop_names) {\n    const parent_component = current_component;\n    set_current_component(component);\n    const props = options.props || {};\n    const $$ = component.$$ = {\n        fragment: null,\n        ctx: null,\n        // state\n        props: prop_names,\n        update: noop,\n        not_equal,\n        bound: blank_object(),\n        // lifecycle\n        on_mount: [],\n        on_destroy: [],\n        before_update: [],\n        after_update: [],\n        context: new Map(parent_component ? parent_component.$$.context : []),\n        // everything else\n        callbacks: blank_object(),\n        dirty: null\n    };\n    let ready = false;\n    $$.ctx = instance\n        ? instance(component, props, (key, value) => {\n            if ($$.ctx && not_equal($$.ctx[key], $$.ctx[key] = value)) {\n                if ($$.bound[key])\n                    $$.bound[key](value);\n                if (ready)\n                    make_dirty(component, key);\n            }\n        })\n        : props;\n    $$.update();\n    ready = true;\n    run_all($$.before_update);\n    $$.fragment = create_fragment($$.ctx);\n    if (options.target) {\n        if (options.hydrate) {\n            // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n            $$.fragment.l(children(options.target));\n        }\n        else {\n            // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n            $$.fragment.c();\n        }\n        if (options.intro)\n            transition_in(component.$$.fragment);\n        mount_component(component, options.target, options.anchor);\n        flush();\n    }\n    set_current_component(parent_component);\n}\nlet SvelteElement;\nif (typeof HTMLElement !== 'undefined') {\n    SvelteElement = class extends HTMLElement {\n        constructor() {\n            super();\n            this.attachShadow({ mode: 'open' });\n        }\n        connectedCallback() {\n            // @ts-ignore todo: improve typings\n            for (const key in this.$$.slotted) {\n                // @ts-ignore todo: improve typings\n                this.appendChild(this.$$.slotted[key]);\n            }\n        }\n        attributeChangedCallback(attr, _oldValue, newValue) {\n            this[attr] = newValue;\n        }\n        $destroy() {\n            destroy_component(this, 1);\n            this.$destroy = noop;\n        }\n        $on(type, callback) {\n            // TODO should this delegate to addEventListener?\n            const callbacks = (this.$$.callbacks[type] || (this.$$.callbacks[type] = []));\n            callbacks.push(callback);\n            return () => {\n                const index = callbacks.indexOf(callback);\n                if (index !== -1)\n                    callbacks.splice(index, 1);\n            };\n        }\n        $set() {\n            // overridden by instance, if it has props\n        }\n    };\n}\nclass SvelteComponent {\n    $destroy() {\n        destroy_component(this, 1);\n        this.$destroy = noop;\n    }\n    $on(type, callback) {\n        const callbacks = (this.$$.callbacks[type] || (this.$$.callbacks[type] = []));\n        callbacks.push(callback);\n        return () => {\n            const index = callbacks.indexOf(callback);\n            if (index !== -1)\n                callbacks.splice(index, 1);\n        };\n    }\n    $set() {\n        // overridden by instance, if it has props\n    }\n}\nclass SvelteComponentDev extends SvelteComponent {\n    constructor(options) {\n        if (!options || (!options.target && !options.$$inline)) {\n            throw new Error(`'target' is a required option`);\n        }\n        super();\n    }\n    $destroy() {\n        super.$destroy();\n        this.$destroy = () => {\n            console.warn(`Component was already destroyed`); // eslint-disable-line no-console\n        };\n    }\n}\n\nexport { HtmlTag, SvelteComponent, SvelteComponentDev, SvelteElement, add_attribute, add_classes, add_flush_callback, add_location, add_render_callback, add_resize_listener, add_transform, afterUpdate, append, assign, attr, beforeUpdate, bind, binding_callbacks, blank_object, bubble, check_outros, children, claim_element, claim_text, clear_loops, component_subscribe, createEventDispatcher, create_animation, create_bidirectional_transition, create_in_transition, create_out_transition, create_slot, create_ssr_component, current_component, custom_event, debug, destroy_block, destroy_component, destroy_each, detach, dirty_components, each, element, element_is, empty, escape, escaped, exclude_internal_props, fix_and_destroy_block, fix_and_outro_and_destroy_block, fix_position, flush, getContext, get_binding_group_value, get_slot_changes, get_slot_context, get_spread_update, get_store_value, globals, group_outros, handle_promise, identity, init, insert, intros, invalid_attribute_name_character, is_client, is_function, is_promise, listen, loop, measure, missing_component, mount_component, noop, not_equal, now, null_to_empty, object_without_properties, onDestroy, onMount, once, outro_and_destroy_block, prevent_default, raf, run, run_all, safe_not_equal, schedule_update, select_multiple_value, select_option, select_options, select_value, self, setContext, set_attributes, set_current_component, set_custom_element_data, set_data, set_input_type, set_input_value, set_now, set_raf, set_style, space, spread, stop_propagation, subscribe, svg_element, text, tick, time_ranges_to_array, to_number, toggle_class, transition_in, transition_out, update_keyed_each, validate_component, validate_store, xlink_attr };\n","(function (global, factory) {\n  typeof exports === 'object' && typeof module !== 'undefined' ? module.exports = factory() :\n  typeof define === 'function' && define.amd ? define(factory) :\n  (global = global || self, global.AbstractNestedRouter = factory());\n}(this, function () { 'use strict';\n\n  var defaultExport = /*@__PURE__*/(function (Error) {\n    function defaultExport(route, path) {\n      var message = \"Unreachable '\" + route + \"', segment '\" + path + \"' is not defined\";\n      Error.call(this, message);\n      this.message = message;\n    }\n\n    if ( Error ) defaultExport.__proto__ = Error;\n    defaultExport.prototype = Object.create( Error && Error.prototype );\n    defaultExport.prototype.constructor = defaultExport;\n\n    return defaultExport;\n  }(Error));\n\n  function buildMatcher(path, parent) {\n    var regex;\n\n    var _isSplat;\n\n    var _priority = -100;\n\n    var keys = [];\n    regex = path.replace(/[-$.]/g, '\\\\$&').replace(/\\(/g, '(?:').replace(/\\)/g, ')?').replace(/([:*]\\w+)(?:<([^<>]+?)>)?/g, function (_, key, expr) {\n      keys.push(key.substr(1));\n\n      if (key.charAt() === ':') {\n        _priority += 100;\n        return (\"((?!#)\" + (expr || '[^/]+?') + \")\");\n      }\n\n      _isSplat = true;\n      _priority += 500;\n      return (\"((?!#)\" + (expr || '.+?') + \")\");\n    });\n\n    try {\n      regex = new RegExp((\"^\" + regex + \"$\"));\n    } catch (e) {\n      throw new TypeError((\"Invalid route expression, given '\" + parent + \"'\"));\n    }\n\n    var _hashed = path.includes('#') ? 0.5 : 1;\n\n    var _depth = path.length * _priority * _hashed;\n\n    return {\n      keys: keys,\n      regex: regex,\n      _depth: _depth,\n      _isSplat: _isSplat\n    };\n  }\n  var PathMatcher = function PathMatcher(path, parent) {\n    var ref = buildMatcher(path, parent);\n    var keys = ref.keys;\n    var regex = ref.regex;\n    var _depth = ref._depth;\n    var _isSplat = ref._isSplat;\n    return {\n      _isSplat: _isSplat,\n      _depth: _depth,\n      match: function (value) {\n        var matches = value.match(regex);\n\n        if (matches) {\n          return keys.reduce(function (prev, cur, i) {\n            prev[cur] = typeof matches[i + 1] === 'string' ? decodeURIComponent(matches[i + 1]) : null;\n            return prev;\n          }, {});\n        }\n      }\n    };\n  };\n\n  PathMatcher.push = function push (key, prev, leaf, parent) {\n    var root = prev[key] || (prev[key] = {});\n\n    if (!root.pattern) {\n      root.pattern = new PathMatcher(key, parent);\n      root.route = leaf || '/';\n    }\n\n    prev.keys = prev.keys || [];\n\n    if (!prev.keys.includes(key)) {\n      prev.keys.push(key);\n      PathMatcher.sort(prev);\n    }\n\n    return root;\n  };\n\n  PathMatcher.sort = function sort (root) {\n    root.keys.sort(function (a, b) {\n      return root[a].pattern._depth - root[b].pattern._depth;\n    });\n  };\n\n  function merge(path, parent) {\n    return (\"\" + (parent && parent !== '/' ? parent : '') + (path || ''));\n  }\n  function walk(path, cb) {\n    var matches = path.match(/<[^<>]*\\/[^<>]*>/);\n\n    if (matches) {\n      throw new TypeError((\"RegExp cannot contain slashes, given '\" + matches + \"'\"));\n    }\n\n    var parts = path !== '/' ? path.split('/') : [''];\n    var root = [];\n    parts.some(function (x, i) {\n      var parent = root.concat(x).join('/') || null;\n      var segment = parts.slice(i + 1).join('/') || null;\n      var retval = cb((\"/\" + x), parent, segment ? ((x ? (\"/\" + x) : '') + \"/\" + segment) : null);\n      root.push(x);\n      return retval;\n    });\n  }\n  function reduce(key, root, _seen) {\n    var params = {};\n    var out = [];\n    var splat;\n    walk(key, function (x, leaf, extra) {\n      var found;\n\n      if (!root.keys) {\n        throw new defaultExport(key, x);\n      }\n\n      root.keys.some(function (k) {\n        if (_seen.includes(k)) { return false; }\n        var ref = root[k].pattern;\n        var match = ref.match;\n        var _isSplat = ref._isSplat;\n        var matches = match(_isSplat ? extra || x : x);\n\n        if (matches) {\n          Object.assign(params, matches);\n\n          if (root[k].route) {\n            out.push(Object.assign({}, root[k].info, {\n              matches: x === leaf || _isSplat || !extra,\n              params: Object.assign({}, params),\n              route: root[k].route,\n              path: _isSplat ? extra : leaf || x\n            }));\n          }\n\n          if (extra === null && !root[k].keys) {\n            return true;\n          }\n\n          if (k !== '/') { _seen.push(k); }\n          splat = _isSplat;\n          root = root[k];\n          found = true;\n          return true;\n        }\n\n        return false;\n      });\n\n      if (!(found || root.keys.some(function (k) { return root[k].pattern.match(x); }))) {\n        throw new defaultExport(key, x);\n      }\n\n      return splat || !found;\n    });\n    return out;\n  }\n  function find(path, routes, retries) {\n    var get = reduce.bind(null, path, routes);\n    var set = [];\n\n    while (retries > 0) {\n      retries -= 1;\n\n      try {\n        return get(set);\n      } catch (e) {\n        if (retries > 0) {\n          return get(set);\n        }\n\n        throw e;\n      }\n    }\n  }\n  function add(path, routes, parent, routeInfo) {\n    var fullpath = merge(path, parent);\n    var root = routes;\n    walk(fullpath, function (x, leaf) {\n      root = PathMatcher.push(x, root, leaf, fullpath);\n\n      if (x !== '/') {\n        root.info = root.info || Object.assign({}, routeInfo);\n      }\n    });\n    root.info = root.info || Object.assign({}, routeInfo);\n    return fullpath;\n  }\n  function rm(path, routes, parent) {\n    var fullpath = merge(path, parent);\n    var root = routes;\n    var leaf = null;\n    var key = null;\n    walk(fullpath, function (x) {\n      if (!root) {\n        leaf = null;\n        return true;\n      }\n\n      key = x;\n      leaf = x === '/' ? routes['/'] : root;\n\n      if (!leaf.keys) {\n        throw new defaultExport(path, x);\n      }\n\n      root = root[x];\n    });\n\n    if (!(leaf && key)) {\n      throw new defaultExport(path, key);\n    }\n\n    delete leaf[key];\n\n    if (key === '/') {\n      delete leaf.info;\n      delete leaf.route;\n    }\n\n    var offset = leaf.keys.indexOf(key);\n\n    if (offset !== -1) {\n      leaf.keys.splice(leaf.keys.indexOf(key), 1);\n      PathMatcher.sort(leaf);\n    }\n  }\n\n  var Router = function Router() {\n    var routes = {};\n    var stack = [];\n    return {\n      mount: function (path, cb) {\n        if (path !== '/') {\n          stack.push(path);\n        }\n\n        cb();\n        stack.pop();\n      },\n      find: function (path, retries) { return find(path, routes, retries === true ? 2 : retries || 1); },\n      add: function (path, routeInfo) { return add(path, routes, stack.join(''), routeInfo); },\n      rm: function (path) { return rm(path, routes, stack.join('')); }\n    };\n  };\n\n  return Router;\n\n}));\n","export const CTX_ROUTER = {};\n\nexport function navigateTo(path) {\n  // If path empty or no string, throws error\n  if (!path || typeof path !== 'string') {\n    throw Error(`svero expects navigateTo() to have a string parameter. The parameter provided was: ${path} of type ${typeof path} instead.`);\n  }\n\n  if (path[0] !== '/' && path[0] !== '#') {\n    throw Error(`svero expects navigateTo() param to start with slash or hash, e.g. \"/${path}\" or \"#${path}\" instead of \"${path}\".`);\n  }\n\n  // If no History API support, fallbacks to URL redirect\n  if (!history.pushState || !window.dispatchEvent) {\n    window.location.href = path;\n    return;\n  }\n\n  // If has History API support, uses it\n  history.pushState({}, '', path);\n  window.dispatchEvent(new Event('popstate'));\n}\n","import { safe_not_equal, noop, run_all, is_function } from '../internal';\nexport { get_store_value as get } from '../internal';\n\nconst subscriber_queue = [];\n/**\n * Creates a `Readable` store that allows reading by subscription.\n * @param value initial value\n * @param {StartStopNotifier}start start and stop notifications for subscriptions\n */\nfunction readable(value, start) {\n    return {\n        subscribe: writable(value, start).subscribe,\n    };\n}\n/**\n * Create a `Writable` store that allows both updating and reading by subscription.\n * @param {*=}value initial value\n * @param {StartStopNotifier=}start start and stop notifications for subscriptions\n */\nfunction writable(value, start = noop) {\n    let stop;\n    const subscribers = [];\n    function set(new_value) {\n        if (safe_not_equal(value, new_value)) {\n            value = new_value;\n            if (stop) { // store is ready\n                const run_queue = !subscriber_queue.length;\n                for (let i = 0; i < subscribers.length; i += 1) {\n                    const s = subscribers[i];\n                    s[1]();\n                    subscriber_queue.push(s, value);\n                }\n                if (run_queue) {\n                    for (let i = 0; i < subscriber_queue.length; i += 2) {\n                        subscriber_queue[i][0](subscriber_queue[i + 1]);\n                    }\n                    subscriber_queue.length = 0;\n                }\n            }\n        }\n    }\n    function update(fn) {\n        set(fn(value));\n    }\n    function subscribe(run, invalidate = noop) {\n        const subscriber = [run, invalidate];\n        subscribers.push(subscriber);\n        if (subscribers.length === 1) {\n            stop = start(set) || noop;\n        }\n        run(value);\n        return () => {\n            const index = subscribers.indexOf(subscriber);\n            if (index !== -1) {\n                subscribers.splice(index, 1);\n            }\n            if (subscribers.length === 0) {\n                stop();\n                stop = null;\n            }\n        };\n    }\n    return { set, update, subscribe };\n}\n/**\n * Derived value store by synchronizing one or more readable stores and\n * applying an aggregation function over its input values.\n * @param {Stores} stores input stores\n * @param {function(Stores=, function(*)=):*}fn function callback that aggregates the values\n * @param {*=}initial_value when used asynchronously\n */\nfunction derived(stores, fn, initial_value) {\n    const single = !Array.isArray(stores);\n    const stores_array = single\n        ? [stores]\n        : stores;\n    const auto = fn.length < 2;\n    return readable(initial_value, (set) => {\n        let inited = false;\n        const values = [];\n        let pending = 0;\n        let cleanup = noop;\n        const sync = () => {\n            if (pending) {\n                return;\n            }\n            cleanup();\n            const result = fn(single ? values[0] : values, set);\n            if (auto) {\n                set(result);\n            }\n            else {\n                cleanup = is_function(result) ? result : noop;\n            }\n        };\n        const unsubscribers = stores_array.map((store, i) => store.subscribe((value) => {\n            values[i] = value;\n            pending &= ~(1 << i);\n            if (inited) {\n                sync();\n            }\n        }, () => {\n            pending |= (1 << i);\n        }));\n        inited = true;\n        sync();\n        return function stop() {\n            run_all(unsubscribers);\n            cleanup();\n        };\n    });\n}\n\nexport { derived, readable, writable };\n","<script context=\"module\">\n  import Router from 'abstract-nested-router';\n  import { CTX_ROUTER, navigateTo } from './utils';\n\n  const router = new Router();\n</script>\n\n<script>\n  import { writable } from 'svelte/store';\n  import { onMount, getContext, setContext } from 'svelte';\n\n  let t;\n  let failure;\n  let fallback;\n\n  export let path = '/';\n  export let nofallback = null;\n\n  const routeInfo = writable({});\n  const routerContext = getContext(CTX_ROUTER);\n  const basePath = routerContext ? routerContext.basePath : writable(path);\n\n  function cleanPath(route) {\n    return route.replace(/\\?[^#]*/, '').replace(/(?!^)\\/#/, '#').replace('/#', '#').replace(/\\/$/, '');\n  }\n\n  function fixPath(route) {\n    if (route === '/#*' || route === '#*') return '#*_';\n    if (route === '/*' || route === '*') return '/*_';\n    return route;\n  }\n\n  function handleRoutes(map) {\n    const params = map.reduce((prev, cur) => {\n      prev[cur.key] = Object.assign(prev[cur.key] || {}, cur.params);\n      return prev;\n    }, {});\n\n    let skip;\n    let routes = {};\n\n    map.some(x => {\n      if (typeof x.condition === 'boolean' || typeof x.condition === 'function') {\n        const ok = typeof x.condition === 'function' ? x.condition() : x.condition;\n\n        if (ok === false && x.redirect) {\n          navigateTo(x.redirect);\n          skip = true;\n          return true;\n        }\n      }\n\n      if (x.key && !routes[x.key]) {\n        if (x.exact && !x.matches) return false;\n        routes[x.key] = { ...x, params: params[x.key] };\n      }\n\n      return false;\n    });\n\n    if (!skip) {\n      $routeInfo = routes;\n    }\n  }\n\n  function doFallback(e, path) {\n    $routeInfo[fallback] = { failure: e, params: { _: path.substr(1) || undefined } };\n  }\n\n  function resolveRoutes(path) {\n    const segments = path.split('#')[0].split('/');\n    const prefix = [];\n    const map = [];\n\n    segments.forEach(key => {\n      const sub = prefix.concat(`/${key}`).join('');\n\n      if (key) prefix.push(`/${key}`);\n\n      try {\n        const next = router.find(sub);\n\n        handleRoutes(next);\n        map.push(...next);\n      } catch (e_) {\n        doFallback(e_, path);\n      }\n    });\n\n    return map;\n  }\n\n  function handlePopState() {\n    const fullpath = cleanPath(`/${location.href.split('/').slice(3).join('/')}`);\n\n    try {\n      const found = resolveRoutes(fullpath);\n\n      if (fullpath.includes('#')) {\n        const next = router.find(fullpath);\n        const keys = {};\n\n        // override previous routes to avoid non-exact matches\n        handleRoutes(found.concat(next).reduce((prev, cur) => {\n          if (typeof keys[cur.key] === 'undefined') {\n            keys[cur.key] = prev.length;\n          }\n\n          prev[keys[cur.key]] = cur;\n\n          return prev;\n        }, []));\n      }\n    } catch (e) {\n      if (!fallback) {\n        failure = e;\n        return;\n      }\n\n      doFallback(e, fullpath);\n    }\n  }\n\n  function _handlePopState() {\n    clearTimeout(t);\n    t = setTimeout(handlePopState, 100);\n  }\n\n  function assignRoute(key, route, detail) {\n    key = key || Math.random().toString(36).substr(2);\n\n    const fixedRoot = $basePath !== path && $basePath !== '/'\n      ? `${$basePath}${path}`\n      : path;\n\n    const handler = { key, ...detail };\n\n    let fullpath;\n\n    router.mount(fixedRoot, () => {\n      fullpath = router.add(fixPath(route), handler);\n      fallback = (handler.fallback && key) || fallback;\n    });\n\n    _handlePopState();\n\n    return [key, fullpath];\n  }\n\n  function unassignRoute(route) {\n    router.rm(fixPath(route));\n    _handlePopState();\n  }\n\n  setContext(CTX_ROUTER, {\n    basePath,\n    routeInfo,\n    assignRoute,\n    unassignRoute,\n  });\n</script>\n\n<svelte:window on:popstate={handlePopState}></svelte:window>\n\n{#if failure && !nofallback}\n  <fieldset>\n    <legend>Router failure: {path}</legend>\n    <pre>{failure}</pre>\n  </fieldset>\n{/if}\n\n<slot />\n","<script>\n  import { onDestroy, getContext } from 'svelte';\n  import { CTX_ROUTER } from './utils';\n\n  export let key = null;\n  export let path = '';\n  export let props = null;\n  export let exact = undefined;\n  export let fallback = undefined;\n  export let component = undefined;\n  export let condition = undefined;\n  export let redirect = undefined;\n\n  const { assignRoute, unassignRoute, routeInfo } = getContext(CTX_ROUTER);\n\n  let activeRouter = null;\n  let activeProps = {};\n  let fullpath;\n\n  function getProps(given, required) {\n    const { props, ...others } = given;\n\n    // prune all declared props from this component\n    required.forEach(k => {\n      delete others[k];\n    });\n\n    return {\n      ...props,\n      ...others,\n    };\n  }\n\n  [key, fullpath] = assignRoute(key, path, { condition, redirect, fallback, exact });\n\n  $: {\n    activeRouter = $routeInfo[key];\n    activeProps = getProps($$props, arguments[0]['$$'].props);\n  }\n\n  onDestroy(() => {\n    unassignRoute(fullpath);\n  });\n</script>\n\n{#if activeRouter}\n  {#if component}\n    <svelte:component this={component} router={activeRouter} {...activeProps} />\n  {:else}\n    <slot router={activeRouter} props={activeProps} />\n  {/if}\n{/if}\n","<script>\n  import { onMount, createEventDispatcher } from 'svelte';\n  import { navigateTo } from './utils';\n\n  let cssClass = '';\n\n  export let href = '/';\n  export let className = '';\n  export let title = '';\n  export { cssClass as class };\n\n  onMount(() => {\n    className = className || cssClass;\n  });\n\n  const dispatch = createEventDispatcher();\n\n  // this will enable `<Link on:click={...} />` calls\n  function onClick(e) {\n    let fixedHref = href;\n\n    // this will rebase anchors to avoid location changes\n    if (fixedHref.charAt() !== '/') {\n      fixedHref = window.location.pathname + fixedHref;\n    }\n\n    navigateTo(fixedHref);\n    dispatch('click', e);\n  }\n</script>\n\n<a {href} class={className} on:click|preventDefault={onClick}><slot></slot></a>\n","import { writable } from 'svelte/store';\n\nexport const status = writable('dude');\n","<script>\n  import { onDestroy } from 'svelte';\n  import { status } from '../stores.js';\n  export let router = {};\n\n  router.path;\n  router.route;\n  router.params;\n\n  let theStatus;\n\n  const stat = status.subscribe(val => {\n    theStatus = val;\n  })\n\n  const chnageStore = () => {\n    status.update(n => n = 'bro');\n  }\n\n  onDestroy(stat);\n</script>\n\n<h1 on:mouseover={chnageStore}>{theStatus}</h1>\n\n<p>This is my router: {router.path}</p>\n","<script>\n  import { Router, Route } from 'svero';\n  import Header from './Header.svelte';\n  import Index from './pages/Index.svelte';\n  import About from './pages/About.svelte';\n</script>\n\n<style>\n  :global(body) {\n    margin: 0;\n    padding: 0;\n  }\n\n  .container {\n    width: 80%;\n    margin: 4em auto;\n  }\n</style>\n\n<Header />\n\n<div class=\"container\">\n  <Router>\n    <Route path=\"*\" component={Index} />\n    <Route path=\"/about\" component={About} />\n  </Router>\n</div>\n","import App from './App.svelte';\n\nconst app = new App({\n  target: document.body,\n  props: {\n    name: 'world'\n  }\n});\n\nexport default app;"],"names":["noop","assign","tar","src","k","run","fn","blank_object","Object","create","run_all","fns","forEach","is_function","thing","safe_not_equal","a","b","component_subscribe","component","store","callback","$$","on_destroy","push","unsub","subscribe","unsubscribe","create_slot","definition","ctx","slot_ctx","get_slot_context","$$scope","get_slot_changes","changed","exclude_internal_props","props","result","append","target","node","appendChild","insert","anchor","insertBefore","detach","parentNode","removeChild","element","name","document","createElement","text","data","createTextNode","space","empty","listen","event","handler","options","addEventListener","removeEventListener","attr","attribute","value","removeAttribute","setAttribute","set_data","current_component","set_current_component","get_current_component","Error","onDestroy","createEventDispatcher","type","detail","callbacks","e","createEvent","initCustomEvent","custom_event","slice","call","getContext","key","context","get","dirty_components","binding_callbacks","render_callbacks","flush_callbacks","resolved_promise","Promise","resolve","update_scheduled","add_render_callback","flush","seen_callbacks","Set","length","shift","update","pop","i","has","add","fragment","dirty","before_update","p","after_update","outroing","outros","group_outros","r","c","check_outros","transition_in","block","local","delete","transition_out","o","d","mount_component","on_mount","m","new_on_destroy","map","filter","destroy_component","detaching","make_dirty","then","init","instance","create_fragment","not_equal","prop_names","parent_component","bound","Map","ready","hydrate","l","Array","from","childNodes","intro","SvelteComponent","[object Object]","this","$destroy","index","indexOf","splice","module","defaultExport","route","path","message","__proto__","prototype","constructor","PathMatcher","parent","ref","regex","_isSplat","_priority","keys","replace","_","expr","substr","charAt","RegExp","TypeError","_hashed","includes","_depth","buildMatcher","match","matches","reduce","prev","cur","decodeURIComponent","merge","walk","cb","parts","split","root","some","x","concat","join","segment","retval","leaf","pattern","sort","routes","stack","mount","find","retries","_seen","splat","params","out","extra","found","info","bind","set","routeInfo","fullpath","rm","factory","CTX_ROUTER","navigateTo","history","pushState","window","dispatchEvent","Event","location","href","subscriber_queue","writable","start","stop","subscribers","new_value","run_queue","s","invalidate","subscriber","failure","nofallback","handlePopState","router","Router","fixPath","t","fallback","routerContext","basePath","handleRoutes","skip","condition","redirect","exact","$routeInfo","doFallback","undefined","segments","prefix","sub","next","e_","resolveRoutes","_handlePopState","clearTimeout","setTimeout","assignRoute","Math","random","toString","fixedRoot","$basePath","unassignRoute","activeRouter","activeProps","levels","updates","to_null_out","accounted_for","n","given","required","others","getProps","$$props","arguments","className","onClick","preventDefault","cssClass","title","dispatch","fixedHref","pathname","status","theStatus","chnageStore","val","Index","About","body"],"mappings":"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"}